{% extends 'base.html.twig' %}

{% block title %}Book index{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .hover-shadow {
            transition: all 0.3s ease;
        }
        .hover-shadow:hover {
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
            transform: translateY(-5px);
        }
        .card-link {
            text-decoration: none;
            color: inherit;
            display: block;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container">
        <h1 class="my-4">Book Index</h1>

        <!-- Search bar -->
        <div class="mb-3">
            <input type="text" id="search-input" placeholder="Search books..." class="form-control" />
        </div>

        <!-- Book list cards -->
        <div id="book-list" class="book-list mb-4">
            {% include 'book/_list.html.twig' %}
        </div>

        <!-- Pagination -->
        <div class="pagination">
            {% if books|length > 0 %}
                {{ knp_pagination_render(books) }}
            {% endif %}
        </div>

        <!-- Button to create new book -->
        <a href="{{ path('app_book_new') }}" class="btn btn-primary mt-3">Create new</a>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        const searchInput = document.getElementById('search-input');
        const bookList = document.getElementById('book-list');
        let searchTimeout = null;

        if (searchInput) {
            searchInput.addEventListener('input', function () {
                clearTimeout(searchTimeout);

                searchTimeout = setTimeout(async () => {
                    const query = searchInput.value.trim();

                    bookList.innerHTML = '<div class="text-center my-4"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>';

                    try {
                        const response = await fetch('/book/search?q=' + encodeURIComponent(query));
                        const data = await response.text();

                        if (data.trim() === '') {
                            bookList.innerHTML = '<div class="alert alert-warning text-center my-4">No results found.</div>';
                        } else {
                            bookList.innerHTML = data;
                        }
                    } catch (error) {
                        console.error('Search failed', error);
                        bookList.innerHTML = '<div class="alert alert-danger text-center my-4">Error while searching.</div>';
                    }
                }, 300); // 300ms debounce
            });
        }
    </script>

    <script src="{{ asset('build/book-delete.js') }}"></script>
{% endblock %}
